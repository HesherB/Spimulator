34080064     #ori  $8, $0, 100     -	$8 = 100
35090000     #ori  $8, $9, 0       -	$9 = 100
01095021     #addu $10, $8, $9     -	$10 = 200
000a5823     #subu $11, $0, $10    -	$11 = -200
01096024     #and  $12, $8, $9     -	$12 = 100
01806824     #and  $13, $12, $0    -	$13 = 0
ad2a0004     #sw   $10, 4($9)      -	MEM(104) = 200
8d2e0004     #lw   $14, 4($9)      -	$14 = MEM(104) = 200
8d2f0004     #lw   $15, 4($9)      -	$15 = MEM(104) = 200
016f802a     #slt  $16, $11, $15   -	$16 = 1
01cf882a     #slt  $17, $14, $15   -	$17 = 0
0230902a     #slt  $18, $17, $16   -	$18 = 1
29f3ff38     #slti $19, $15, -200  -	$19 = 0
29f40190     #slti $20, $15, 400   -	$20 = 1
0008a82b     #sltu $21, $0, $8     -	$21 = 1  0<100? = Y
0160b02b     #sltu $22, $11, $0    -	$22 = 0  -200<0? = N (not when -200 is interpreted as unsigned)
11090001     #beq  $8, $9, 1       -    branch over next NOP
00000000     # ILLEGAL
114b0001     #beq  $10, $11, 1     -	should not branch
05610001     #bgez $11, 1          -	should not branch
05410001     #bgez $10, 1          -	branch over next NOP
00000000     # ILLEGAL
08001019     #j 1019               -	jump over next 2 NOPS (1019<<(2)) = 4076 (the mem addr of the addu)
00000000     # ILLEGAL
00000000     # ILLEGAL
014bb821     #addu $23, $10, $11   -	$23 = 0